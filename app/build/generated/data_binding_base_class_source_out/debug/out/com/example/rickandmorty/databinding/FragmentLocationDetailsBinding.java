// Generated by view binder compiler. Do not edit!
package com.example.rickandmorty.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.rickandmorty.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentLocationDetailsBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final TextView providedLocationCreated;

  @NonNull
  public final TextView providedLocationDimension;

  @NonNull
  public final TextView providedLocationId;

  @NonNull
  public final TextView providedLocationName;

  @NonNull
  public final RecyclerView providedLocationResidents;

  @NonNull
  public final TextView providedLocationType;

  @NonNull
  public final TextView providedLocationUrl;

  @NonNull
  public final TextView residents;

  private FragmentLocationDetailsBinding(@NonNull FrameLayout rootView,
      @NonNull TextView providedLocationCreated, @NonNull TextView providedLocationDimension,
      @NonNull TextView providedLocationId, @NonNull TextView providedLocationName,
      @NonNull RecyclerView providedLocationResidents, @NonNull TextView providedLocationType,
      @NonNull TextView providedLocationUrl, @NonNull TextView residents) {
    this.rootView = rootView;
    this.providedLocationCreated = providedLocationCreated;
    this.providedLocationDimension = providedLocationDimension;
    this.providedLocationId = providedLocationId;
    this.providedLocationName = providedLocationName;
    this.providedLocationResidents = providedLocationResidents;
    this.providedLocationType = providedLocationType;
    this.providedLocationUrl = providedLocationUrl;
    this.residents = residents;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentLocationDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentLocationDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_location_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentLocationDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.providedLocationCreated;
      TextView providedLocationCreated = ViewBindings.findChildViewById(rootView, id);
      if (providedLocationCreated == null) {
        break missingId;
      }

      id = R.id.providedLocationDimension;
      TextView providedLocationDimension = ViewBindings.findChildViewById(rootView, id);
      if (providedLocationDimension == null) {
        break missingId;
      }

      id = R.id.providedLocationId;
      TextView providedLocationId = ViewBindings.findChildViewById(rootView, id);
      if (providedLocationId == null) {
        break missingId;
      }

      id = R.id.providedLocationName;
      TextView providedLocationName = ViewBindings.findChildViewById(rootView, id);
      if (providedLocationName == null) {
        break missingId;
      }

      id = R.id.providedLocationResidents;
      RecyclerView providedLocationResidents = ViewBindings.findChildViewById(rootView, id);
      if (providedLocationResidents == null) {
        break missingId;
      }

      id = R.id.providedLocationType;
      TextView providedLocationType = ViewBindings.findChildViewById(rootView, id);
      if (providedLocationType == null) {
        break missingId;
      }

      id = R.id.providedLocationUrl;
      TextView providedLocationUrl = ViewBindings.findChildViewById(rootView, id);
      if (providedLocationUrl == null) {
        break missingId;
      }

      id = R.id.residents;
      TextView residents = ViewBindings.findChildViewById(rootView, id);
      if (residents == null) {
        break missingId;
      }

      return new FragmentLocationDetailsBinding((FrameLayout) rootView, providedLocationCreated,
          providedLocationDimension, providedLocationId, providedLocationName,
          providedLocationResidents, providedLocationType, providedLocationUrl, residents);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
