// Generated by view binder compiler. Do not edit!
package com.example.rickandmorty.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.rickandmorty.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CardLocationBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final LinearLayout linearLayoutLocation;

  @NonNull
  public final CardView locationCard;

  @NonNull
  public final TextView locationDimension;

  @NonNull
  public final TextView locationName;

  @NonNull
  public final TextView locationType;

  private CardLocationBinding(@NonNull CardView rootView,
      @NonNull LinearLayout linearLayoutLocation, @NonNull CardView locationCard,
      @NonNull TextView locationDimension, @NonNull TextView locationName,
      @NonNull TextView locationType) {
    this.rootView = rootView;
    this.linearLayoutLocation = linearLayoutLocation;
    this.locationCard = locationCard;
    this.locationDimension = locationDimension;
    this.locationName = locationName;
    this.locationType = locationType;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static CardLocationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CardLocationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.card_location, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CardLocationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.linearLayoutLocation;
      LinearLayout linearLayoutLocation = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutLocation == null) {
        break missingId;
      }

      CardView locationCard = (CardView) rootView;

      id = R.id.location_dimension;
      TextView locationDimension = ViewBindings.findChildViewById(rootView, id);
      if (locationDimension == null) {
        break missingId;
      }

      id = R.id.location_name;
      TextView locationName = ViewBindings.findChildViewById(rootView, id);
      if (locationName == null) {
        break missingId;
      }

      id = R.id.location_type;
      TextView locationType = ViewBindings.findChildViewById(rootView, id);
      if (locationType == null) {
        break missingId;
      }

      return new CardLocationBinding((CardView) rootView, linearLayoutLocation, locationCard,
          locationDimension, locationName, locationType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
