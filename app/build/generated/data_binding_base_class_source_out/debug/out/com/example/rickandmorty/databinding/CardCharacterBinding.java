// Generated by view binder compiler. Do not edit!
package com.example.rickandmorty.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.rickandmorty.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CardCharacterBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final CardView characterCard;

  @NonNull
  public final TextView characterGender;

  @NonNull
  public final ImageView characterImage;

  @NonNull
  public final TextView characterName;

  @NonNull
  public final TextView characterSpecies;

  @NonNull
  public final TextView characterStatus;

  @NonNull
  public final LinearLayout linearLayoutCharacter;

  private CardCharacterBinding(@NonNull CardView rootView, @NonNull CardView characterCard,
      @NonNull TextView characterGender, @NonNull ImageView characterImage,
      @NonNull TextView characterName, @NonNull TextView characterSpecies,
      @NonNull TextView characterStatus, @NonNull LinearLayout linearLayoutCharacter) {
    this.rootView = rootView;
    this.characterCard = characterCard;
    this.characterGender = characterGender;
    this.characterImage = characterImage;
    this.characterName = characterName;
    this.characterSpecies = characterSpecies;
    this.characterStatus = characterStatus;
    this.linearLayoutCharacter = linearLayoutCharacter;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static CardCharacterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CardCharacterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.card_character, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CardCharacterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      CardView characterCard = (CardView) rootView;

      id = R.id.character_gender;
      TextView characterGender = ViewBindings.findChildViewById(rootView, id);
      if (characterGender == null) {
        break missingId;
      }

      id = R.id.character_image;
      ImageView characterImage = ViewBindings.findChildViewById(rootView, id);
      if (characterImage == null) {
        break missingId;
      }

      id = R.id.character_name;
      TextView characterName = ViewBindings.findChildViewById(rootView, id);
      if (characterName == null) {
        break missingId;
      }

      id = R.id.character_species;
      TextView characterSpecies = ViewBindings.findChildViewById(rootView, id);
      if (characterSpecies == null) {
        break missingId;
      }

      id = R.id.character_status;
      TextView characterStatus = ViewBindings.findChildViewById(rootView, id);
      if (characterStatus == null) {
        break missingId;
      }

      id = R.id.linearLayoutCharacter;
      LinearLayout linearLayoutCharacter = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutCharacter == null) {
        break missingId;
      }

      return new CardCharacterBinding((CardView) rootView, characterCard, characterGender,
          characterImage, characterName, characterSpecies, characterStatus, linearLayoutCharacter);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
