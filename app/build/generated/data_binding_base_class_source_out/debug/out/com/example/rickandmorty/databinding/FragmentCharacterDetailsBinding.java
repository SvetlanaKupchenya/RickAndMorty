// Generated by view binder compiler. Do not edit!
package com.example.rickandmorty.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.rickandmorty.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentCharacterDetailsBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final TextView providedCharacterCreated;

  @NonNull
  public final ListView providedCharacterEpisodes;

  @NonNull
  public final TextView providedCharacterGender;

  @NonNull
  public final TextView providedCharacterId;

  @NonNull
  public final ImageView providedCharacterImage;

  @NonNull
  public final TextView providedCharacterLocationName;

  @NonNull
  public final TextView providedCharacterLocationURL;

  @NonNull
  public final TextView providedCharacterName;

  @NonNull
  public final TextView providedCharacterOriginName;

  @NonNull
  public final TextView providedCharacterOriginURL;

  @NonNull
  public final TextView providedCharacterSpecies;

  @NonNull
  public final TextView providedCharacterStatus;

  @NonNull
  public final TextView providedCharacterType;

  @NonNull
  public final TextView providedCharacterURL;

  private FragmentCharacterDetailsBinding(@NonNull FrameLayout rootView,
      @NonNull TextView providedCharacterCreated, @NonNull ListView providedCharacterEpisodes,
      @NonNull TextView providedCharacterGender, @NonNull TextView providedCharacterId,
      @NonNull ImageView providedCharacterImage, @NonNull TextView providedCharacterLocationName,
      @NonNull TextView providedCharacterLocationURL, @NonNull TextView providedCharacterName,
      @NonNull TextView providedCharacterOriginName, @NonNull TextView providedCharacterOriginURL,
      @NonNull TextView providedCharacterSpecies, @NonNull TextView providedCharacterStatus,
      @NonNull TextView providedCharacterType, @NonNull TextView providedCharacterURL) {
    this.rootView = rootView;
    this.providedCharacterCreated = providedCharacterCreated;
    this.providedCharacterEpisodes = providedCharacterEpisodes;
    this.providedCharacterGender = providedCharacterGender;
    this.providedCharacterId = providedCharacterId;
    this.providedCharacterImage = providedCharacterImage;
    this.providedCharacterLocationName = providedCharacterLocationName;
    this.providedCharacterLocationURL = providedCharacterLocationURL;
    this.providedCharacterName = providedCharacterName;
    this.providedCharacterOriginName = providedCharacterOriginName;
    this.providedCharacterOriginURL = providedCharacterOriginURL;
    this.providedCharacterSpecies = providedCharacterSpecies;
    this.providedCharacterStatus = providedCharacterStatus;
    this.providedCharacterType = providedCharacterType;
    this.providedCharacterURL = providedCharacterURL;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCharacterDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCharacterDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_character_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCharacterDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.providedCharacterCreated;
      TextView providedCharacterCreated = ViewBindings.findChildViewById(rootView, id);
      if (providedCharacterCreated == null) {
        break missingId;
      }

      id = R.id.providedCharacterEpisodes;
      ListView providedCharacterEpisodes = ViewBindings.findChildViewById(rootView, id);
      if (providedCharacterEpisodes == null) {
        break missingId;
      }

      id = R.id.providedCharacterGender;
      TextView providedCharacterGender = ViewBindings.findChildViewById(rootView, id);
      if (providedCharacterGender == null) {
        break missingId;
      }

      id = R.id.providedCharacterId;
      TextView providedCharacterId = ViewBindings.findChildViewById(rootView, id);
      if (providedCharacterId == null) {
        break missingId;
      }

      id = R.id.providedCharacterImage;
      ImageView providedCharacterImage = ViewBindings.findChildViewById(rootView, id);
      if (providedCharacterImage == null) {
        break missingId;
      }

      id = R.id.providedCharacterLocationName;
      TextView providedCharacterLocationName = ViewBindings.findChildViewById(rootView, id);
      if (providedCharacterLocationName == null) {
        break missingId;
      }

      id = R.id.providedCharacterLocationURL;
      TextView providedCharacterLocationURL = ViewBindings.findChildViewById(rootView, id);
      if (providedCharacterLocationURL == null) {
        break missingId;
      }

      id = R.id.providedCharacterName;
      TextView providedCharacterName = ViewBindings.findChildViewById(rootView, id);
      if (providedCharacterName == null) {
        break missingId;
      }

      id = R.id.providedCharacterOriginName;
      TextView providedCharacterOriginName = ViewBindings.findChildViewById(rootView, id);
      if (providedCharacterOriginName == null) {
        break missingId;
      }

      id = R.id.providedCharacterOriginURL;
      TextView providedCharacterOriginURL = ViewBindings.findChildViewById(rootView, id);
      if (providedCharacterOriginURL == null) {
        break missingId;
      }

      id = R.id.providedCharacterSpecies;
      TextView providedCharacterSpecies = ViewBindings.findChildViewById(rootView, id);
      if (providedCharacterSpecies == null) {
        break missingId;
      }

      id = R.id.providedCharacterStatus;
      TextView providedCharacterStatus = ViewBindings.findChildViewById(rootView, id);
      if (providedCharacterStatus == null) {
        break missingId;
      }

      id = R.id.providedCharacterType;
      TextView providedCharacterType = ViewBindings.findChildViewById(rootView, id);
      if (providedCharacterType == null) {
        break missingId;
      }

      id = R.id.providedCharacterURL;
      TextView providedCharacterURL = ViewBindings.findChildViewById(rootView, id);
      if (providedCharacterURL == null) {
        break missingId;
      }

      return new FragmentCharacterDetailsBinding((FrameLayout) rootView, providedCharacterCreated,
          providedCharacterEpisodes, providedCharacterGender, providedCharacterId,
          providedCharacterImage, providedCharacterLocationName, providedCharacterLocationURL,
          providedCharacterName, providedCharacterOriginName, providedCharacterOriginURL,
          providedCharacterSpecies, providedCharacterStatus, providedCharacterType,
          providedCharacterURL);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
